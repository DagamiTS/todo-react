{"version":3,"sources":["assets/img/remove.svg","assets/img/close.svg","assets/img/edit.svg","assets/img/add.svg","components/Badge/index.jsx","components/List/index.jsx","components/AddListButton/index.jsx","components/Tasks/AddTaskForm.jsx","components/Tasks/Task.jsx","components/Tasks/index.jsx","App.js","index.js"],"names":["module","exports","Badge","color","onClick","className","classNames","List","items","isRemovable","onRemove","onClickItem","activeItem","map","item","index","key","active","id","icon","name","tasks","length","src","removeSVG","alt","window","confirm","axios","delete","then","removeList","AddList","colors","onAdd","useState","visiblePopup","setVisiblePopup","selectedColor","selectColor","isLoading","setIsLoading","inputValue","setInputValue","useEffect","Array","isArray","onClose","height","viewBox","width","xmlns","d","closeSVG","value","onChange","e","target","type","placeholder","filter","c","post","colorId","data","listObj","catch","alert","finally","AddTaskForm","list","onAddTask","formVisibility","setFormVisibility","toggleFormVisibility","disabled","obj","addSVG","Task","text","onEdit","onComplete","completed","checked","htmlFor","fill","stroke","strokeWidth","strokeLinecap","strokeLinejoin","Tasks","onEditTitle","onRemoveTask","onEditTask","onCompleteTask","withoutEmpty","to","style","hex","editSVG","newTitle","prompt","patch","console","log","task","App","lists","setLists","setColors","setActiveItem","history","useHistory","location","useLocation","axois","get","listId","Number","pathname","split","find","title","newList","taskObj","taskId","newTaskText","push","newLists","exact","path","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.28677c60.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/remove.a980d6ac.svg\";","module.exports = __webpack_public_path__ + \"static/media/close.14e2f379.svg\";","module.exports = __webpack_public_path__ + \"static/media/edit.77e1ba27.svg\";","module.exports = __webpack_public_path__ + \"static/media/add.0ad8e57b.svg\";","import React from 'react';\r\nimport classNames from 'classnames';\r\n\r\nimport './Badge.scss';\r\n\r\nconst Badge = ({ color, onClick, className }) => <i onClick={onClick} className={classNames('badge', {[`badge--${color}`]: color}, className)}></i>;\r\n\r\nexport default Badge;","import React from 'react';\r\nimport classNames from 'classnames';\r\nimport axios from 'axios';\r\n\r\nimport Badge from '../Badge';\r\n\r\nimport removeSVG from '../../assets/img/remove.svg';\r\nimport \"./List.scss\";\r\n\r\nconst List = ({items, isRemovable, onClick, onRemove, onClickItem, activeItem}) => {\r\n  const removeList = (item) => {\r\n    if (window.confirm(\"Do you really want to delete this list?\")) {\r\n      axios.delete(`http://localhost:3001/lists/${item.id}`)\r\n        .then(() => onRemove(item.id));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <ul onClick={onClick} className=\"list\">\r\n      {items.map((item, index) => {\r\n        return (\r\n          <li key={index}\r\n              className={classNames(item.className, {active: item.active ? item.active : activeItem && activeItem.id === item.id})}\r\n              onClick={onClickItem ? () => onClickItem(item) : null}>\r\n            <i>{item.icon ? item.icon : <Badge color={item.color.name} />}</i>\r\n            <span>{item.name}{item.tasks && ` (${item.tasks.length})`}</span>\r\n            {isRemovable &&\r\n            <img className=\"list__remove-icon\" src={removeSVG} alt=\"Remove icon\" onClick={() => removeList(item)} />}\r\n          </li>\r\n        );\r\n      })}\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default List;","import React, {useEffect, useState} from 'react';\r\nimport axios from 'axios';\r\n\r\nimport List from '../List';\r\nimport Badge from \"../Badge\";\r\n\r\nimport closeSVG from '../../assets/img/close.svg';\r\nimport './AddListButton.scss';\r\n\r\nconst AddList = ({ colors, onAdd }) => {\r\n  const [visiblePopup, setVisiblePopup] = useState(false);\r\n  const [selectedColor, selectColor] = useState(3);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [inputValue, setInputValue] = useState('');\r\n\r\n  useEffect(() => {\r\n    if (Array.isArray(colors)) {\r\n      selectColor(colors[0].id);\r\n    }\r\n  }, [colors]);\r\n\r\n  const onClose = () => {\r\n    setVisiblePopup(false);\r\n    setInputValue('');\r\n    selectColor(colors[0].id);\r\n  };\r\n\r\n  const onAddList = () => {\r\n    if (!inputValue) {\r\n      alert('Введите название списка');\r\n      return;\r\n    }\r\n    setIsLoading(true);\r\n    const color = colors.filter(c => c.id === selectedColor)[0];\r\n    axios.post('http://localhost:3001/lists', { name: inputValue, colorId: selectedColor })\r\n      .then(({ data }) => {\r\n        const listObj = { ...data, color, tasks: [] };\r\n        onAdd(listObj);\r\n        onClose();\r\n      })\r\n      .catch(() => alert(\"Ошибка при добавлении списка!\"))\r\n      .finally(() => setIsLoading(false));\r\n  };\r\n\r\n  return (\r\n    <div className=\"add-list\">\r\n      <List\r\n        onClick={() => setVisiblePopup(true)}\r\n        items={[\r\n          {\r\n            className: 'list__add-button',\r\n            icon: <svg height=\"10pt\" viewBox=\"0 0 426.66667 426.66667\" width=\"10pt\" xmlns=\"http://www.w3.org/2000/svg\">\r\n              <path\r\n                d=\"m405.332031 192h-170.664062v-170.667969c0-11.773437-9.558594-21.332031-21.335938-21.332031-11.773437 0-21.332031 9.558594-21.332031 21.332031v170.667969h-170.667969c-11.773437 0-21.332031 9.558594-21.332031 21.332031 0 11.777344 9.558594 21.335938 21.332031 21.335938h170.667969v170.664062c0 11.777344 9.558594 21.335938 21.332031 21.335938 11.777344 0 21.335938-9.558594 21.335938-21.335938v-170.664062h170.664062c11.777344 0 21.335938-9.558594 21.335938-21.335938 0-11.773437-9.558594-21.332031-21.335938-21.332031zm0 0\" />\r\n            </svg>,\r\n            name: 'Добавить список',\r\n          }\r\n        ]}\r\n      />\r\n      {visiblePopup &&\r\n      <div className=\"add-list__popup\">\r\n        <img onClick={onClose} src={closeSVG} alt=\"close button\"\r\n             className=\"add-list__popup-close-btn\" />\r\n        <input value={inputValue} onChange={e => setInputValue(e.target.value)} className=\"field\" type=\"text\"\r\n               placeholder=\"Название папки\" />\r\n        <div className=\"add-list__popup-colors\">\r\n          {colors.map(color => (\r\n            <Badge\r\n              onClick={() => selectColor(color.id)}\r\n              key={color.id}\r\n              color={color.name}\r\n              className={selectedColor === color.id && 'active'} />))}\r\n        </div>\r\n        <button onClick={onAddList} className=\"button\">{isLoading ? \"Добавление\" : \"Добавить\"}</button>\r\n      </div>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AddList;","import React, {useState} from 'react';\r\nimport axios from 'axios';\r\n\r\nimport addSVG from \"../../assets/img/add.svg\"; //B4B4B4\r\n\r\nconst AddTaskForm = ({ list, onAddTask }) => {\r\n  const [formVisibility, setFormVisibility] = useState(false);\r\n  const [inputValue, setInputValue] = useState('');\r\n  const [isLoading, setIsLoading] = useState(false);\r\n\r\n  const toggleFormVisibility = () => {\r\n    setFormVisibility(!formVisibility);\r\n    setInputValue('');\r\n  };\r\n\r\n  const addTask = () => {\r\n    setIsLoading(true);\r\n    const obj = {\r\n      \"listId\": list.id,\r\n      \"text\": inputValue,\r\n      \"completed\": false,\r\n    };\r\n    axios.post(`http://localhost:3001/tasks`, obj)\r\n      .then(({ data }) => {\r\n        onAddTask(list.id, data);\r\n        toggleFormVisibility();\r\n      })\r\n      .catch(() => alert(\"Ошибка при добавлении задачи!\"))\r\n      .finally(() => setIsLoading(false));\r\n  };\r\n\r\n  return (\r\n    <div className=\"tasks__form\">\r\n      {\r\n        !formVisibility ?\r\n          <div onClick={toggleFormVisibility} className=\"tasks__form-new\">\r\n            <img src={addSVG} alt=\"Add icon\" />\r\n            <span>Новая задача</span>\r\n          </div>\r\n          :\r\n          <div className=\"tasks__form-block\">\r\n            <input className=\"field\" type=\"text\" placeholder=\"Текст задачи\" value={inputValue}\r\n                   onChange={e => setInputValue(e.target.value)} />\r\n            <button disabled={isLoading} className=\"button\" onClick={addTask}>\r\n              {!isLoading ? \"Добавить задачу\" : \"Добавление\"}\r\n            </button>\r\n            <button className=\"button button--grey\" onClick={toggleFormVisibility}>Отмена</button>\r\n          </div>\r\n      }\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AddTaskForm;","import React from 'react';\r\n\r\nimport './Tasks.scss';\r\n\r\nconst Task = ({id, text, list, onRemove, onEdit, onComplete, completed}) => {\r\n  const onChangeCheckbox = e => {\r\n    onComplete(list.id, id, e.target.checked);\r\n  };\r\n\r\n  return (\r\n    <div key={id} className=\"tasks__items-row\">\r\n      <div className=\"checkbox\">\r\n        <input id={`task-${id}`} type=\"checkbox\" checked={completed} onChange={onChangeCheckbox} />\r\n        <label htmlFor={`task-${id}`}>\r\n          <svg width=\"11\" height=\"8\" viewBox=\"0 0 11 8\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n            <path d=\"M9.29999 1.20001L3.79999 6.70001L1.29999 4.20001\" stroke=\"black\" strokeWidth=\"1.5\"\r\n                  strokeLinecap=\"round\" strokeLinejoin=\"round\" />\r\n          </svg>\r\n        </label>\r\n      </div>\r\n      <p>{text}</p>\r\n      <div className=\"tasks__items-row-actions\">\r\n        <div onClick={() => onEdit(list.id, {id, text})}>\r\n          <svg width=\"15\" height=\"15\" viewBox=\"0 0 15 15\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n            <path\r\n              d=\"M0 12.0504V14.5834C0 14.8167 0.183308 15 0.41661 15H2.9496C3.05792 15 3.16624 14.9583 3.24123 14.875L12.34 5.78458L9.21542 2.66001L0.124983 11.7504C0.0416611 11.8338 0 11.9338 0 12.0504ZM14.7563 3.36825C14.8336 3.29116 14.8949 3.1996 14.9367 3.0988C14.9785 2.99801 15 2.88995 15 2.78083C15 2.6717 14.9785 2.56365 14.9367 2.46285C14.8949 2.36205 14.8336 2.27049 14.7563 2.19341L12.8066 0.24367C12.7295 0.166428 12.6379 0.105146 12.5372 0.0633343C12.4364 0.021522 12.3283 0 12.2192 0C12.1101 0 12.002 0.021522 11.9012 0.0633343C11.8004 0.105146 11.7088 0.166428 11.6318 0.24367L10.107 1.76846L13.2315 4.89304L14.7563 3.36825Z\"\r\n              fill=\"#7C7C7C\" />\r\n          </svg>\r\n        </div>\r\n        <div onClick={() => onRemove(list.id, id)}>\r\n          <svg width=\"21\" height=\"21\" viewBox=\"0 0 21 21\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n            <path\r\n              d=\"M10.315 0C4.62737 0 0 4.62737 0 10.315C0 16.0026 4.62737 20.63 10.315 20.63C16.0026 20.63 20.63 16.0026 20.63 10.315C20.63 4.62737 16.0026 0 10.315 0ZM14.0497 12.928C14.1265 13.0009 14.1879 13.0885 14.2303 13.1855C14.2727 13.2826 14.2952 13.3872 14.2966 13.4931C14.298 13.599 14.2781 13.7041 14.2382 13.8022C14.1983 13.9003 14.1392 13.9894 14.0643 14.0643C13.9894 14.1392 13.9003 14.1983 13.8022 14.2382C13.7041 14.2781 13.599 14.298 13.4931 14.2966C13.3872 14.2952 13.2826 14.2727 13.1855 14.2303C13.0885 14.1879 13.0009 14.1265 12.928 14.0497L10.315 11.4373L7.70203 14.0497C7.55202 14.1922 7.35226 14.2705 7.14536 14.2679C6.93846 14.2652 6.74077 14.1819 6.59446 14.0355C6.44814 13.8892 6.36477 13.6915 6.36212 13.4846C6.35947 13.2777 6.43775 13.078 6.58028 12.928L9.19275 10.315L6.58028 7.70203C6.43775 7.55202 6.35947 7.35226 6.36212 7.14536C6.36477 6.93846 6.44814 6.74077 6.59446 6.59446C6.74077 6.44814 6.93846 6.36477 7.14536 6.36212C7.35226 6.35947 7.55202 6.43775 7.70203 6.58028L10.315 9.19275L12.928 6.58028C13.078 6.43775 13.2777 6.35947 13.4846 6.36212C13.6915 6.36477 13.8892 6.44814 14.0355 6.59446C14.1819 6.74077 14.2652 6.93846 14.2679 7.14536C14.2705 7.35226 14.1922 7.55202 14.0497 7.70203L11.4373 10.315L14.0497 12.928Z\"\r\n              fill=\"#5C5C5C\" />\r\n          </svg>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Task;","import React from 'react';\r\nimport axios from 'axios';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport editSVG from '../../assets/img/edit.svg';  //DFDFDF\r\n\r\nimport './Tasks.scss';\r\n\r\nimport AddTaskForm from \"./AddTaskForm\";\r\nimport Task from \"./Task\";\r\n\r\nconst Tasks = ({list, onEditTitle, onAddTask, onRemoveTask, onEditTask, onCompleteTask, withoutEmpty}) => {\r\n  const editTitle = () => {\r\n    const newTitle = window.prompt(\"Название списка\", list.name);\r\n    if (newTitle) {\r\n      onEditTitle(list.id, newTitle);\r\n      axios.patch(`http://localhost:3001/lists/${list.id}`, {\r\n        name: newTitle\r\n      }).catch(() => console.log('Не удалось обновить название списка'));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"tasks\">\r\n      <Link to={`/lists/${list.id}`}>\r\n        <h2 style={{color: list.color.hex}} className=\"tasks__title\">\r\n          {list.name}\r\n          <img src={editSVG} alt=\"Edit icon\" onClick={editTitle} />\r\n        </h2>\r\n      </Link>\r\n      <div className=\"tasks__items\">\r\n        {!withoutEmpty && list.tasks && !list.tasks.length && <h2>Задачи отсутствуют</h2>}\r\n        {list.tasks && list.tasks.map(task => <Task key={task.id} list={list} onRemove={onRemoveTask}\r\n                                                    onEdit={onEditTask} onComplete={onCompleteTask} {...task} />)}\r\n        <AddTaskForm key={list.id} list={list} onAddTask={onAddTask} />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Tasks;","import React, {useEffect, useState} from 'react';\nimport axois from 'axios';\n\nimport {AddList, List, Tasks} from './components';\nimport {Route, useHistory, useLocation} from \"react-router-dom\";\nimport axios from \"axios\";\n\nfunction App() {\n  const [lists, setLists] = useState(null);\n  const [colors, setColors] = useState(null);\n  const [activeItem, setActiveItem] = useState(null);\n  let history = useHistory();\n  let location = useLocation();\n\n  useEffect(() => {\n    axois.get('http://localhost:3001/lists?_expand=color&_embed=tasks')\n      .then(({data}) => setLists(data));\n    axois.get('http://localhost:3001/colors')\n      .then(({data}) => setColors(data));\n  }, []);\n\n  useEffect(() => {\n    const listId = Number(location.pathname.split('lists/')[1]);\n    if (lists) {\n      const list = lists.find(list => list.id === listId);\n      setActiveItem(list);\n    }\n  }, [location.pathname, lists]);\n\n  const onAdd = (obj) => {\n    const newList = [...lists, obj];\n    setLists(newList);\n  };\n\n  const onEditTitle = (id, title) => {\n    const newList = lists.map(item => {\n      if (item.id === id) {\n        item.name = title;\n      }\n      return item;\n    })\n    setLists(newList);\n  };\n\n  const onAddTask = (listId, taskObj) => {\n    console.log(listId, taskObj);\n    const newList = lists.map(item => {\n      if (item.id === listId) {\n        item.tasks = [...item.tasks, taskObj];\n      }\n      return item;\n    });\n    setLists(newList);\n  };\n\n  const onRemoveTask = (listId, taskId) => {\n    if (window.confirm(\"Вы действительно хотите удалить задачу?\")) {\n      const newList = lists.map(item => {\n        if (item.id === listId) {\n          item.tasks = item.tasks.filter(task => task.id !== taskId);\n        }\n        return item;\n      })\n      setLists(newList);\n      axios.delete(`http://localhost:3001/tasks/${taskId}`,)\n        .catch(() => console.log('Не удалось удалить задачу'));\n    }\n  };\n\n  const onEditTask = (listId, taskObj) => {\n    const newTaskText = window.prompt('Текст задачи', taskObj.text);\n    if (!newTaskText) {\n      return;\n    }\n    const newList = lists.map(list => {\n      if (list.id === listId) {\n        list.tasks = list.tasks.map(task => {\n          if (task.id === taskObj.id) {\n            task.text = newTaskText;\n          }\n          return task;\n        });\n      }\n      return list;\n    })\n    setLists(newList);\n    axios.patch(`http://localhost:3001/tasks/${taskObj.id}`, {text: newTaskText})\n      .catch(() => console.log('Не удалось обновить задачу'));\n  };\n\n  const onCompleteTask = (listId, taskId, completed) => {\n    const newList = lists.map(list => {\n      if (list.id === listId) {\n        list.tasks = list.tasks.map(task => {\n          if (task.id === taskId) {\n            task.completed = completed;\n          }\n          return task;\n        });\n      }\n      return list;\n    })\n    setLists(newList);\n    axios.patch(`http://localhost:3001/tasks/${taskId}`, {completed})\n      .catch(() => console.log('Не удалось обновить задачу'));\n  };\n\n  return (\n    <div className=\"todo\">\n      <div className=\"todo__sidebar\">\n        <List\n          items={[\n            {\n              icon: <svg width=\"14\" height=\"12\" viewBox=\"0 0 14 12\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n                <path\n                  d=\"M10.96 5.10001H5.74001C5.24321 5.10001 5.20001 5.50231 5.20001 6.00001C5.20001 6.49771 5.24321 6.90001 5.74001 6.90001H10.96C11.4568 6.90001 11.5 6.49771 11.5 6.00001C11.5 5.50231 11.4568 5.10001 10.96 5.10001ZM12.76 9.60001H5.74001C5.24321 9.60001 5.20001 10.0023 5.20001 10.5C5.20001 10.9977 5.24321 11.4 5.74001 11.4H12.76C13.2568 11.4 13.3 10.9977 13.3 10.5C13.3 10.0023 13.2568 9.60001 12.76 9.60001ZM5.74001 2.40001H12.76C13.2568 2.40001 13.3 1.99771 13.3 1.50001C13.3 1.00231 13.2568 0.600006 12.76 0.600006H5.74001C5.24321 0.600006 5.20001 1.00231 5.20001 1.50001C5.20001 1.99771 5.24321 2.40001 5.74001 2.40001ZM2.86001 5.10001H1.24001C0.743212 5.10001 0.700012 5.50231 0.700012 6.00001C0.700012 6.49771 0.743212 6.90001 1.24001 6.90001H2.86001C3.35681 6.90001 3.40001 6.49771 3.40001 6.00001C3.40001 5.50231 3.35681 5.10001 2.86001 5.10001ZM2.86001 9.60001H1.24001C0.743212 9.60001 0.700012 10.0023 0.700012 10.5C0.700012 10.9977 0.743212 11.4 1.24001 11.4H2.86001C3.35681 11.4 3.40001 10.9977 3.40001 10.5C3.40001 10.0023 3.35681 9.60001 2.86001 9.60001ZM2.86001 0.600006H1.24001C0.743212 0.600006 0.700012 1.00231 0.700012 1.50001C0.700012 1.99771 0.743212 2.40001 1.24001 2.40001H2.86001C3.35681 2.40001 3.40001 1.99771 3.40001 1.50001C3.40001 1.00231 3.35681 0.600006 2.86001 0.600006Z\"\n                  fill=\"black\" />\n              </svg>,\n              name: \"Все задачи\",\n              active: location.pathname === '/todo-react/',\n            }\n          ]}\n          onClickItem={() => history.push('/')} />\n        <List items={lists || []} isRemovable onRemove={(id) => {\n          const newLists = lists.filter(item => item.id !== id);\n          setLists(newLists);\n        }} onClickItem={list => history.push(`/todo-react/lists/${list.id}`)} activeItem={activeItem} />\n        <AddList onAdd={onAdd} colors={colors} />\n      </div>\n      <div className=\"todo__tasks\">\n        <Route exact path=\"/todo-react/\">\n          {lists && lists.map(list => <Tasks key={list.id} list={list} onEditTitle={onEditTitle}\n                                             onCompleteTask={onCompleteTask} onAddTask={onAddTask}\n                                             onRemoveTask={onRemoveTask} onEditTask={onEditTask}\n                                             withoutEmpty />)}\n        </Route>\n        <Route path=\"/todo-react/lists/:id\">\n          {lists && activeItem &&\n          <Tasks list={activeItem} onEditTitle={onEditTitle} onCompleteTask={onCompleteTask} onAddTask={onAddTask}\n                 onRemoveTask={onRemoveTask} onEditTask={onEditTask} />}\n        </Route>\n      </div>\n    </div>\n  );\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {BrowserRouter} from \"react-router-dom\";\n\nimport App from './App';\n\nimport './index.scss';\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}